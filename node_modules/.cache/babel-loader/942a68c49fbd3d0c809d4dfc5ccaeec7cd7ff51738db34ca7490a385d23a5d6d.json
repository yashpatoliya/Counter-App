{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashp\\\\Documents\\\\GitHub\\\\react-app\\\\src\\\\components\\\\QuizStared\\\\QuizStarted.js\",\n  _s = $RefreshSig$();\nimport classes from \"./QuizStarted.module.css\";\nimport Card from \"../UI/BlurCard/Card\";\nimport { Button } from \"../UI/Button/Button\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizStarted = props => {\n  _s();\n  const quiz = [{\n    name: \"English Grammar\",\n    score,\n    result: {\n      trueAns: [],\n      falseAns: []\n    },\n    questions: [{\n      question: \"What is related to the earthquake?\",\n      options: [{\n        opt: \"Weighing Scale\"\n      }, {\n        opt: \"Richter Scale\"\n      }, {\n        opt: \"Matric Scale\"\n      }],\n      answer: \"Richter Scale\"\n    }, {\n      question: \"What is related to the second?\",\n      options: [{\n        opt: \"Weighing Scale\"\n      }, {\n        opt: \"Richter Scale\"\n      }, {\n        opt: \"Matric Scale\"\n      }],\n      answer: \"Richter Scale\"\n    }, {\n      question: \"What is related to the third?\",\n      options: [{\n        opt: \"Weighing Scale\"\n      }, {\n        opt: \"Richter Scale\"\n      }, {\n        opt: \"Matric Scale\"\n      }],\n      answer: \"Richter Scale\"\n    }]\n  }];\n  const [counter, setCounter] = useState(60);\n  const [score, setScore] = useState(0);\n  const [quizLive, setQuizLive] = useState({\n    ...quiz.questions[0]\n  });\n  const navigate = useNavigate();\n  let quizNumber = 0;\n  const ansCheck = data => {\n    if (data.select == 'yash') {\n      alert(true);\n    } else {\n      alert(false);\n    }\n    quizNumber++;\n  };\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    if (counter == 0) {\n      navigate(\"/\");\n    }\n    ;\n    const quizQuestion = () => {\n      let obj = {\n        ...quiz.questions[0]\n      };\n      setQuizLive({\n        ...obj\n      });\n      console.log(obj);\n    };\n    quizQuestion();\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.quiz,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.book_image,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../../assets/cardicon.svg\",\n        alt: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: \"English Grammar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.circle,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sec Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.question,\n        children: \"What is related to the earthquake?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), [{\n        opt: 'vasu'\n      }, {\n        opt: 'jash'\n      }, {\n        opt: 'yash'\n      }].map(item => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => ansCheck({\n          select: item.opt\n        }),\n        children: item.opt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.score,\n      children: \"Your Score : 00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.box_2,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Banner Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizStarted, \"FWAht6OCROowMCev3e0roYuhJ0w=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizStarted;\nexport default QuizStarted;\nvar _c;\n$RefreshReg$(_c, \"QuizStarted\");","map":{"version":3,"names":["classes","Card","Button","useEffect","useState","useNavigate","QuizStarted","props","quiz","name","score","result","trueAns","falseAns","questions","question","options","opt","answer","counter","setCounter","setScore","quizLive","setQuizLive","navigate","quizNumber","ansCheck","data","select","alert","setTimeout","quizQuestion","obj","console","log","book_image","title","circle","map","item","box_2"],"sources":["C:/Users/yashp/Documents/GitHub/react-app/src/components/QuizStared/QuizStarted.js"],"sourcesContent":["import classes from \"./QuizStarted.module.css\";\r\nimport Card from \"../UI/BlurCard/Card\";\r\nimport { Button } from \"../UI/Button/Button\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst QuizStarted = (props) => {\r\n  const quiz = [\r\n    {\r\n      name: \"English Grammar\",\r\n      score,\r\n      result : {\r\n        trueAns : [],\r\n        falseAns : []\r\n      },\r\n      questions: [\r\n        {\r\n          question: \"What is related to the earthquake?\",\r\n          options: [\r\n            {\r\n              opt: \"Weighing Scale\",\r\n            },\r\n            {\r\n              opt: \"Richter Scale\",\r\n            },\r\n            {\r\n              opt: \"Matric Scale\",\r\n            },\r\n          ],\r\n          answer: \"Richter Scale\",\r\n        },\r\n        {\r\n          question: \"What is related to the second?\",\r\n          options: [\r\n            {\r\n              opt: \"Weighing Scale\",\r\n            },\r\n            {\r\n              opt: \"Richter Scale\",\r\n            },\r\n            {\r\n              opt: \"Matric Scale\",\r\n            },\r\n          ],\r\n          answer: \"Richter Scale\",\r\n        },\r\n        {\r\n          question: \"What is related to the third?\",\r\n          options: [\r\n            {\r\n              opt: \"Weighing Scale\",\r\n            },\r\n            {\r\n              opt: \"Richter Scale\",\r\n            },\r\n            {\r\n              opt: \"Matric Scale\",\r\n            },\r\n          ],\r\n          answer: \"Richter Scale\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const [counter, setCounter] = useState(60);\r\n  const [score, setScore] = useState(0);\r\n  const [quizLive,setQuizLive] = useState({...quiz.questions[0]})\r\n  const navigate = useNavigate();\r\n \r\n\r\n  let quizNumber = 0;\r\n\r\n\r\n  const ansCheck = (data) => {\r\n    if(data.select == 'yash'){\r\n      alert(true);\r\n    }else{\r\n      alert(false);\r\n    }\r\n    quizNumber++;\r\n  }\r\n\r\n  useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    if (counter == 0) {\r\n      navigate(\"/\");\r\n    };\r\n    const quizQuestion = () => {\r\n      let obj = {\r\n        ...quiz.questions[0]\r\n      }\r\n      setQuizLive({...obj})\r\n      console.log(obj);\r\n    }\r\n    quizQuestion();\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div className={classes.quiz}>\r\n      <div className={classes.book_image}>\r\n        <img src=\"../../../assets/cardicon.svg\" alt=\"image\" />\r\n      </div>\r\n      <p className={classes.title}>English Grammar</p>\r\n      <Card>\r\n        <p className={classes.circle}>\r\n          <h6>{counter}</h6>\r\n          <span>Sec Left</span>\r\n        </p>\r\n        <p className={classes.question}>What is related to the earthquake?</p>\r\n        {[{opt:'vasu'},{opt:'jash'},{opt:'yash'}].map((item) => (\r\n          <Button onClick={() => ansCheck({select : item.opt})}>{item.opt}</Button>\r\n        ))}\r\n      </Card>\r\n      <p className={classes.score}>Your Score : 00</p>\r\n      <div className={classes.box_2}>\r\n        <p>Banner Add</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default QuizStarted;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}