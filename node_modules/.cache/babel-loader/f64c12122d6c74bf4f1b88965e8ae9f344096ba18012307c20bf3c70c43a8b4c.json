{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashp\\\\Documents\\\\GitHub\\\\react-app\\\\src\\\\components\\\\QuizStared\\\\QuizStarted.js\",\n  _s = $RefreshSig$();\nimport classes from \"./QuizStarted.module.css\";\nimport Card from \"../UI/BlurCard/Card\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizStarted = props => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [counter, setCounter] = useState(60);\n  const navigate = useNavigate();\n  ansValid = null;\n  let quizNumber = 0;\n  let buttonAfterAns = '';\n  const ansCheck = data => {\n    buttonAfterAns = `${ansValid == null ? '' : ansValid ? classes.right : classes.wrong}`;\n    if (data.select == 'yash') {\n      alert(true);\n    } else {\n      alert(false);\n    }\n    quizNumber++;\n  };\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    if (counter == 0) {\n      navigate(\"/\");\n    }\n    ;\n  }, [counter, buttonAfterAns]);\n  const Button = props => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${classes.button} ${buttonAfterAns}`,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.quiz,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.book_image,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../../assets/cardicon.svg\",\n        alt: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: \"English Grammar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.circle,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sec Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.question,\n        children: \"What is related to the earthquake?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: option.isCorrect ? selectedOption === option.value ? 'green' : 'white' : selectedOption === option.value ? 'red' : 'white',\n            padding: '10px',\n            margin: '10px'\n          },\n          onClick: () => handleOptionClick(option.value),\n          children: option.value\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.score,\n      children: [\"Your Score : \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.box_2,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Banner Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizStarted, \"V3PGl/SMMPJ8N69l1XQhRyf0Hvg=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizStarted;\nexport default QuizStarted;\nvar _c;\n$RefreshReg$(_c, \"QuizStarted\");","map":{"version":3,"names":["classes","Card","useEffect","useState","useNavigate","QuizStarted","props","score","setScore","counter","setCounter","navigate","ansValid","quizNumber","buttonAfterAns","ansCheck","data","right","wrong","select","alert","setTimeout","Button","button","children","quiz","book_image","title","circle","question","options","map","option","backgroundColor","isCorrect","selectedOption","value","padding","margin","handleOptionClick","box_2"],"sources":["C:/Users/yashp/Documents/GitHub/react-app/src/components/QuizStared/QuizStarted.js"],"sourcesContent":["import classes from \"./QuizStarted.module.css\";\r\nimport Card from \"../UI/BlurCard/Card\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst QuizStarted = (props) => {\r\n  const [score, setScore] = useState(0);\r\n  const [counter, setCounter] = useState(60);\r\n  const navigate = useNavigate();\r\n   ansValid = null;\r\n\r\n  let quizNumber = 0;\r\n  let buttonAfterAns = '';\r\n  const ansCheck = (data) => {\r\n    buttonAfterAns = `${ansValid == null ? '' : ansValid ? classes.right : classes.wrong}`;\r\n    if (data.select == 'yash') {\r\n      alert(true);\r\n    } else {\r\n      alert(false);\r\n    }\r\n    quizNumber++;\r\n  }\r\n\r\n  useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    if (counter == 0) {\r\n      navigate(\"/\");\r\n    };\r\n  }, [counter, buttonAfterAns]);\r\n\r\n  const Button = (props) => {\r\n    return (\r\n      <button\r\n        className={`${classes.button} ${buttonAfterAns}`}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.quiz}>\r\n      <div className={classes.book_image}>\r\n        <img src=\"../../../assets/cardicon.svg\" alt=\"image\" />\r\n      </div>\r\n      <p className={classes.title}>English Grammar</p>\r\n      <Card>\r\n        <p className={classes.circle}>\r\n          <h6>{counter}</h6>\r\n          <span>Sec Left</span>\r\n        </p>\r\n        <p className={classes.question}>What is related to the earthquake?</p>\r\n        <div>\r\n        {options.map((option) => (\r\n        <div\r\n          key={option.value}\r\n          style={{\r\n            backgroundColor: option.isCorrect\r\n              ? selectedOption === option.value\r\n                ? 'green'\r\n                : 'white'\r\n              : selectedOption === option.value\r\n              ? 'red'\r\n              : 'white',\r\n            padding: '10px',\r\n            margin: '10px',\r\n          }}\r\n          onClick={() => handleOptionClick(option.value)}\r\n        >\r\n          {option.value}\r\n        </div>\r\n      ))}\r\n      </div>\r\n      </Card>\r\n      <p className={classes.score}>Your Score : {score}</p>\r\n      <div className={classes.box_2}>\r\n        <p>Banner Add</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default QuizStarted;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}